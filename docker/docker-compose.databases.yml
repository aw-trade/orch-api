# Persistent Database Infrastructure
# Run this independently with: docker-compose -f docker-compose.databases.yml up -d

services:
  postgres:
    image: postgres:15
    container_name: trading-postgres
    environment:
      POSTGRES_DB: trading_results
      POSTGRES_USER: trading_user
      POSTGRES_PASSWORD: trading_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - trading-db-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trading_user -d trading_results"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mongodb:
    image: mongo:7
    container_name: trading-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin_pass
      MONGO_INITDB_DATABASE: trading_configs
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./database/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - trading-db-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD","mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Database administration tools
  pgadmin:
    image: dpage/pgadmin4:8
    container_name: trading-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@trading.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - trading-db-network
    depends_on:
      - postgres
    restart: unless-stopped
    profiles: ["admin-tools"]  # Only start with --profile admin-tools

  redis:
    image: redis:7-alpine
    container_name: trading-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - trading-db-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  mongo-express:
    image: mongo-express:1.0.2
    container_name: trading-mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin_pass
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin_pass@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    networks:
      - trading-db-network
    depends_on:
      - mongodb
    restart: unless-stopped
    profiles: ["admin-tools"]  # Only start with --profile admin-tools

networks:
  trading-db-network:
    external: true
    name: trading-db-network

volumes:
  postgres_data:
    name: trading_postgres_data
    driver: local
  mongodb_data:
    name: trading_mongodb_data
    driver: local
  mongodb_config:
    name: trading_mongodb_config
    driver: local
  pgadmin_data:
    name: trading_pgadmin_data
    driver: local
  redis_data:
    name: trading_redis_data
    driver: local